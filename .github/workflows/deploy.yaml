name: Deploy to production
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build Image
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env


    - name: Build, tag, and push image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: simplebank
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:$IMAGE_TAG:latest . 
        docker push -a $REGISTRY/$REPOSITORY

    - name: Update Kube config
      run: aws eks --region us-east-1 update-kubeconfig --name simple-bank

    - name: Deploy Image to Amazon
      run: |
        kubectl apply -f eks/aws-auth.yaml
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
        kubectl apply -f eks/issuer.yaml
        kubectl apply -f eks/ingress.yaml
    


      # - name: Build, tag, and push amd image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: simplebank
      #     IMAGE_TAG: v1-amd64
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --platform=linux/amd64 . --build-arg architecture=amd64
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # - name: create docker manifest list
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: simplebank
      #     IMAGE_TAG: v1
      #   run: |
      #     docker manifest create $REGISTRY/$REPOSITORY:$IMAGE_TAG \
      #       $REGISTRY/$REPOSITORY:v1-arm64 \
      #       $REGISTRY/$REPOSITORY:v1-amd64
      #     docker manifest push $REGISTRY/$REPOSITORY:$IMAGE_TAG 

      
        
          