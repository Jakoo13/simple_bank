name: Deploy to production
on:
  push:
    branches:
      - main

jobs:
    build:
        name: Build Image
        runs-on: ubuntu-latest
        steps:

          - name: Checkout
            uses: actions/checkout@v2

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: us-east-1

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Load secrets and save to app.env
            run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

          - name: Build, tag, and push arm image to Amazon ECR
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: simplebank
              IMAGE_TAG: v1-arm64
            run: |
              docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG  --platform=linux/arm64 . --build-arg architecture=arm64
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          - name: Build, tag, and push amd image to Amazon ECR
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: simplebank
              IMAGE_TAG: v1-amd64
            run: |
              docker build --platform=linux/amd64 -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --platform=linux/arm64 . --build-arg architecture=arm64
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          - name: create docker manifest list
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: simplebank
              IMAGE_TAG: v1
            run: |
              docker manifest create $REGISTRY/$REPOSITORY:$IMAGE_TAG \
                $REGISTRY/$REPOSITORY:v1-arm64 \
                $REGISTRY/$REPOSITORY:v1-amd64
              docker manifest push $REGISTRY/$REPOSITORY:$IMAGE_TAG 

          
            
              